1. Write a program in C to input a string and print it.
#include <stdio.h>

int main()
{
   char str[50];
   scanf("%s",str);
   printf("%s",str);

    return 0;
}

2. Write a program in C to find the length of a string without using library functions.

#include <stdio.h>

int main()
{
   char str[50];
   int c=0;
   scanf("%s",str);
   for(int i=0;str[i]!='\0';i++)
   {
       c++;
   }
   printf("%d",c);

    return 0;
}

3. Write a program in C to separate individual characters from a string.
#include <stdio.h>

int main()
{
   char str[50]=" ";
   int c=0;
   scanf("%s",str);
   while(str[c]!='\0')
   {
       printf("%c ",str[c]);
       c++;
   }
   

    return 0;
}

5. Write a program in C to count the total number of words in a string.

#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   scanf("%s",str);
   int len=strlen(str);
   int c=0;
   for(int i=0;i<len;i++)
   {
       c++;
   }
   printf("%d",c);
    return 0;
}

6. Write a program in C to count the total number of alphabets, digits and special characters in a string.
#include <stdio.h>

int main()
{
    char str[50];
    scanf("%s",str);
    int alpha=0,digit=0,splchar=0,i;
    while(str[i] !='\0')
    {
        if((str[i]>='a'&&str[i]<'z')||(str[i]>'A'&&str[i]<'Z'))
        {
        alpha++;
        }
        else if(str[i]>='0'&&str[i]<'9')
        {
            digit++;
        }
        else
        {
            splchar++;
        }
        i++;
    }
    printf("no of alphabets %d",alpha);
    printf("\nno of digits %d",digit);
    printf("\nno of special character %d",splchar);
    return 0;
}
7. Write a program in C to copy one string to another string.

#include <stdio.h>
#include<string.h>

int main()
{
    char str1[50],str2[50];
    int i=0;
    scanf("%s",str1);
    while(str1[i]!='\0')
    {
        str2[i]=str1[i];
        i++;
    }
    str2[i]='\0';
    
    printf("first string is %s",str1);
    printf("\ncopied string is %s",str2);

    return 0;
}

8.An online book reading community's grid displays books in a specific format. Only one batch of books is displayed at a time and each batch of books is recognized as a string tagged a-z. Each character of the string denotes the initials of the book's author. The community has decided to change the format of the display grid but before they can do this, they need to know the number of unique author's initials present in the given batch of books. The unique author's initials are the initials that appear only once in the batch of books represented as a string.

Write an algorithm to help the community find the count of unique author's initials present in the given batch of books.
#include<stdio.h>
#include<string.h>
int main()
{
    char str[50];
    scanf("%s",str);
    int count=0;
    int n = strlen(str);
    for(int i=0;i<n;i++)
    {
        int a=0;
        for(int j=0;j<n;j++)
        {
        if(str[i]==str[j]&&i!=j)
        {
             a=1;
             break;
        }
    }
    if(a==0)
    {
    count++;
    }
    }
        printf("%d",count);
        return 0;
}

